<input type=color value="#ff0000">
// One liner function:
const addCSS = s =>(d=>{d.head.appendChild(d.createElement("style")).innerHTML=s})(document);

// Usage: 

var text = `
input[type="color"] {
	-webkit-appearance: none;
	border: none;
	width: 15em;
	height: 32px;
}
input[type="color"]::-webkit-color-swatch-wrapper {
	padding: 0;
}
input[type="color"]::-webkit-color-swatch {
	border: none;
}`


addCSS(text)

function copyNodeStyle(sourceNode, targetNode) {
  const computedStyle = window.getComputedStyle(sourceNode);
  Array.from(computedStyle).forEach(key => targetNode.style.setProperty(key, computedStyle.getPropertyValue(key), computedStyle.getPropertyPriority(key)))
}

copyNodeStyle($("#inputHex"),$("#inputColor"))
col = $('input[type="color"]')
but = $('input[type="button"]')
ra = $('input[type="range"]')
txt = $('input[type="text"]')

copyNodeStyle(txt,col)

col.style.backgroundColor = "rgb(100,0,0)"
col.style.border = "none"



// One liner function:
const addCSS = s =>(d=>{d.head.appendChild(d.createElement(\"style\")).innerHTML=s})(document);
// Usage: 
var text = `
input[type=\"color\"] {
	-webkit-appearance: none;
	border: none;
	width: 15em;
	height: 32px;
}
input[type=\"color\"]::-webkit-color-swatch-wrapper {
	padding: 0;
}
input[type=\"color\"]::-webkit-color-swatch {
	border: none;
}`
addCSS(text)
function copyNodeStyle(sourceNode, targetNode) {
  const computedStyle = window.getComputedStyle(sourceNode);
  Array.from(computedStyle).forEach(key => targetNode.style.setProperty(key, computedStyle.getPropertyValue(key), computedStyle.getPropertyPriority(key)))
}
col = $('input[type=\"color\"]')
but = $('input[type=\"button\"]')
ra = $('input[type=\"range\"]')
txt = $('input[type=\"text\"]')
copyNodeStyle(txt,col)